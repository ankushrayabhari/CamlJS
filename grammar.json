{
  "tokens": [
    {
      "name": "NotEqual",
      "regex": "<>"
    },
    {
      "name": "GreaterThanOrEqual",
      "regex": ">="
    },
    {
      "name": "LessThanOrEqual",
      "regex": "<="
    },
    {
      "name": "FunctionArrow",
      "regex": "->"
    },
    {
      "name": "Negation",
      "regex": "~-"
    },
    {
      "name": "Plus",
      "regex": "\\+"
    },
    {
      "name": "Minus",
      "regex": "-"
    },
    {
      "name": "Times",
      "regex": "\\*"
    },
    {
      "name": "Divide",
      "regex": "/"
    },
    {
      "name": "GreaterThan",
      "regex": ">"
    },
    {
      "name": "LessThan",
      "regex": "<"
    },
    {
      "name": "Equal",
      "regex": "="
    },
    {
      "name": "LParen",
      "regex": "("
    },
    {
      "name": "RParen",
      "regex": ")"
    },
    {
      "name": "SemiColon",
      "regex": ";"
    },
    {
      "name": "If",
      "regex": "if"
    },
    {
      "name": "Then",
      "regex": "then"
    },
    {
      "name": "Else",
      "regex": "else"
    },
    {
      "name": "Fun",
      "regex": "fun"
    },
    {
      "name": "Let",
      "regex": "let"
    },
    {
      "name": "Rec",
      "regex": "rec"
    },
    {
      "name": "In",
      "regex": "in"
    },
    {
      "name": "Int",
      "parameter": "int",
      "regex": "[0-9]+"
    },
    {
      "name": "LowercaseIdent",
      "parameter": "string",
      "regex": "\\([a-z]\\|_\\)\\([A-Za-z0-9]\\|_\\|'\\)*"
    }
  ],
  "productions": {
    "Expr": [
      ["LowercaseIdent"],
      ["Int"],
      ["LetExpr"]
    ],
    "LetExpr": [
      ["Let", "LowercaseIdent", "Equal", "LetExpr", "in", "AnonFuncExpr"],
      ["AnonFuncExpr"]
    ],
    "AnonFuncExpr": [
      ["Fun", "OneOrMoreLowercaseIdent", "FunctionArrow", "AnonFuncExpr"],
      ["SemiColonExpr"]
    ],
    "OneOrMoreLowercaseIdent": [
      ["OneOrMoreLowercaseIdent", "LowercaseIdent"],
      ["LowercaseIdent"]
    ],
    "SemiColonExpr": [
      ["IfExpr", "SemiColon", "SemiColonExpr"],
      ["IfExpr"]
    ],
    "IfExpr": [
      ["If", "IfExpr", "Then", "IfExpr", "Else", "IfExpr"],
      ["If", "IfExpr", "Then", "IfExpr"],
      ["ComparisonExpr"]
    ],
    "ComparisonExpr": [
      ["ComparisonExpr", "Equal", "AddExpr"],
      ["ComparisonExpr", "LessThan", "AddExpr"],
      ["ComparisonExpr", "GreaterThan", "AddExpr"],
      ["ComparisonExpr", "LessThanOrEqual", "AddExpr"],
      ["ComparisonExpr", "GreaterThanOrEqual", "AddExpr"],
      ["ComparisonExpr", "NotEqual", "AddExpr"],
      ["AddExpr"],
    ],
    "AddExpr": [
      ["AddExpr", "Plus", "TimesExpr"],
      ["AddExpr", "Minus", "TimesExpr"],
      ["TimesExpr"]
    ],
    "TimesExpr": [
      ["TimesExpr", "Times", "FunctionCallExpr"],
      ["TimesExpr", "Divide", "FunctionCallExpr"],
      ["FunctionCallExpr"]
    ],
    "FunctionCallExpr": [
      ["FunctionCallExpr", "PrefixExpr"],
      ["PrefixExpr"]
    ],
    "PrefixExpr": [
      ["Negation", "PrefixExpr"],
      ["ParenExpr"]
    ],
    "ParenExpr": [
      ["LParen", "Expr", "RParen"],
      ["LowercaseIdent"],
      ["Int"]
    ],

  }
}
